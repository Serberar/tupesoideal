import React, { useContext, useEffect, useState } from 'react';
import { myContext } from '../../components/Context';
import axios from 'axios';
import { useNavigate } from 'react-router-dom';


const Consulta = () => {
  const { state } = useContext(myContext);
  const { userData } = state;
  const [privados, setPrivados] = useState(null);
  const navigate = useNavigate();

  useEffect(() => {
    if (!userData) {
      navigate('/');
      return;
    }

    const descargarDatosPrivados = async () => {
      try {
        const respuesta = await datosPrivados();
      } catch (error) {
        console.error('Error al obtener los datos privados:', error);
      }
    };

    descargarDatosPrivados();
  }, [userData, navigate]);


  const datosPrivados = async () => {
    try {
      const response = await axios.get(`${process.env.REACT_APP_WP_CUSTOM}/listar-privados?user_id=${userData.usuario.id}`, {
        headers: {
          'Authorization': `Bearer ${userData.token}`,
        }
      })
      setPrivados(response.data);
    } catch (error) {
      console.error('Error al realizar la solicitud:', error);
    }
  }

  const descargarArchivo = async (url) => {
    try {
      const response = await axios.get(url, {
        auth: {
          username: process.env.REACT_APP_USER,
          password: process.env.REACT_APP_PASSWORD,
        },
        responseType: 'blob',
      });
      
      const a = document.createElement('a');
      a.href = URL.createObjectURL(response.data);
      a.download = privados.archivos_privados[0]?.nombre_archivo || 'archivo';
      a.click();
    } catch (error) {
      console.error('Error al intentar descargar el archivo:', error);
    }
  };
  
  const renderizarHTML = (htmlString) => {
    return { __html: htmlString }
  }

  return (
    <div className='clienteContainer'>
      <h1>Consulta</h1>

      <h2>Archivos Privados</h2>
      {privados?.archivos_privados?.length > 0 && (
        <div>
          <ul>
            {privados.archivos_privados.map((archivo) => (
              <li key={archivo.ID}>
                <strong>{archivo.titulo}</strong>
                <br />
                <div dangerouslySetInnerHTML={renderizarHTML(archivo.contenido)} />
                <br /><br />
                <button onClick={() => descargarArchivo(`${process.env.REACT_APP_BACK}${archivo.enlace_descarga}`)}>
                  Descargar archivo
                </button>
                <br /><br />
              </li>
            ))}
          </ul>
        </div>
      )}

      {privados?.posts_sin_archivos?.length > 0 && (
        <div>
          <ul>
            {privados.posts_sin_archivos.map((post) => (
              <li key={post.ID}>
                <strong>{post.titulo}</strong>
                <br />
                <div dangerouslySetInnerHTML={renderizarHTML(post.contenido)} />
                <br /><br />
              </li>
            ))}
          </ul>
        </div>
      )}

      

      
    </div>
  );
};

export default Consulta
